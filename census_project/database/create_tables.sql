-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.activity_abroad_codes
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pkey9 PRIMARY KEY (id),
    CONSTRAINT actaukey UNIQUE (id, code),
    CONSTRAINT ukey9 UNIQUE (description)
        INCLUDE(id)
);

CREATE TABLE IF NOT EXISTS public.auth_group
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_group_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_name_key UNIQUE (name)
);

CREATE TABLE IF NOT EXISTS public.auth_group_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    group_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_group_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_group_permissions_group_id_permission_id_0cd325b0_uniq UNIQUE (group_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.auth_permission
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer NOT NULL,
    codename character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT auth_permission_pkey PRIMARY KEY (id),
    CONSTRAINT auth_permission_content_type_id_codename_01ab375a_uniq UNIQUE (content_type_id, codename)
);

CREATE TABLE IF NOT EXISTS public.auth_user
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    password character varying(128) COLLATE pg_catalog."default" NOT NULL,
    last_login timestamp with time zone,
    is_superuser boolean NOT NULL,
    username character varying(150) COLLATE pg_catalog."default" NOT NULL,
    first_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    last_name character varying(150) COLLATE pg_catalog."default" NOT NULL,
    email character varying(254) COLLATE pg_catalog."default" NOT NULL,
    is_staff boolean NOT NULL,
    is_active boolean NOT NULL,
    date_joined timestamp with time zone NOT NULL,
    CONSTRAINT auth_user_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_username_key UNIQUE (username)
);

CREATE TABLE IF NOT EXISTS public.auth_user_groups
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    group_id integer NOT NULL,
    CONSTRAINT auth_user_groups_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_groups_user_id_group_id_94350c0c_uniq UNIQUE (user_id, group_id)
);

CREATE TABLE IF NOT EXISTS public.auth_user_user_permissions
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    user_id integer NOT NULL,
    permission_id integer NOT NULL,
    CONSTRAINT auth_user_user_permissions_pkey PRIMARY KEY (id),
    CONSTRAINT auth_user_user_permissions_user_id_permission_id_14a6b632_uniq UNIQUE (user_id, permission_id)
);

CREATE TABLE IF NOT EXISTS public.bathing_facilities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT bathfacpkey PRIMARY KEY (id, description),
    CONSTRAINT bathfacukey UNIQUE (id, description, code),
    CONSTRAINT bathingfaci_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.cooking_fuel
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cookfuepkey PRIMARY KEY (id, description),
    CONSTRAINT cookfueukey UNIQUE (id, description, code),
    CONSTRAINT cookingf_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.cooking_space
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cookspapkey PRIMARY KEY (id, description),
    CONSTRAINT cookingspace_ukey UNIQUE (id),
    CONSTRAINT cookspaukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.crop_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cropty_pkey PRIMARY KEY (id, description),
    CONSTRAINT cropty_ukey UNIQUE (id),
    CONSTRAINT croptype_ukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.district_types
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    type character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT district_types_pkey PRIMARY KEY (id, type),
    CONSTRAINT ukey1 UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.districts
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    district_type_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT districts_pkey PRIMARY KEY (id, name),
    CONSTRAINT ukey1_2 UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.django_admin_log
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    action_time timestamp with time zone NOT NULL,
    object_id text COLLATE pg_catalog."default",
    object_repr character varying(200) COLLATE pg_catalog."default" NOT NULL,
    action_flag smallint NOT NULL,
    change_message text COLLATE pg_catalog."default" NOT NULL,
    content_type_id integer,
    user_id integer NOT NULL,
    CONSTRAINT django_admin_log_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_content_type
(
    id integer NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    app_label character varying(100) COLLATE pg_catalog."default" NOT NULL,
    model character varying(100) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT django_content_type_pkey PRIMARY KEY (id),
    CONSTRAINT django_content_type_app_label_model_76bd3d3b_uniq UNIQUE (app_label, model)
);

CREATE TABLE IF NOT EXISTS public.django_migrations
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    app character varying(255) COLLATE pg_catalog."default" NOT NULL,
    name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    applied timestamp with time zone NOT NULL,
    CONSTRAINT django_migrations_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.django_session
(
    session_key character varying(40) COLLATE pg_catalog."default" NOT NULL,
    session_data text COLLATE pg_catalog."default" NOT NULL,
    expire_date timestamp with time zone NOT NULL,
    CONSTRAINT django_session_pkey PRIMARY KEY (session_key)
);

CREATE TABLE IF NOT EXISTS public.dwelling_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT dweltspkey PRIMARY KEY (id, description),
    CONSTRAINT dwellingt_ukey UNIQUE (id),
    CONSTRAINT dweltukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.employment_sector
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT escpkey PRIMARY KEY (id, description),
    CONSTRAINT employmentsector_ukey UNIQUE (id),
    CONSTRAINT empukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.employment_status
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT espkey PRIMARY KEY (id, description),
    CONSTRAINT employmentstatus_ukey UNIQUE (id),
    CONSTRAINT empstukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.enumerator
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    supervisor_id integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    phone integer NOT NULL,
    CONSTRAINT enumeratorpkey PRIMARY KEY (id),
    CONSTRAINT enumeratorukey UNIQUE (id, name, phone)
);

CREATE TABLE IF NOT EXISTS public.ethnicity
(
    id integer NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ethnicity_pkey PRIMARY KEY (id),
    CONSTRAINT ethnicity_ukey UNIQUE (id)
        INCLUDE(id),
    CONSTRAINT ethnicity_ukey2 UNIQUE (description),
    CONSTRAINT ethnicityukey3 UNIQUE (code)
);

CREATE TABLE IF NOT EXISTS public.farm_measurement_unit
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT farmeasunit_pkey PRIMARY KEY (id, description),
    CONSTRAINT farmeasunit_ukey UNIQUE (id, description, code),
    CONSTRAINT farmeasureun_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.floor
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT floorpkey PRIMARY KEY (id, description),
    CONSTRAINT floort_ukey UNIQUE (id),
    CONSTRAINT floorukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.household_roster_absent
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    fname character varying COLLATE pg_catalog."default" NOT NULL,
    relationship_type integer NOT NULL,
    sex character varying COLLATE pg_catalog."default" NOT NULL,
    status boolean NOT NULL DEFAULT false,
    months_absent integer NOT NULL,
    destination integer NOT NULL,
    questionaire_id integer NOT NULL,
    nationality_id integer NOT NULL,
    dob date NOT NULL,
    ethnicity_id integer NOT NULL,
    birth_place_id integer NOT NULL,
    religion_id integer NOT NULL,
    marital_status_id integer NOT NULL,
    language_literacy_id integer NOT NULL,
    schooling_level_id integer NOT NULL,
    employment_sector_id integer NOT NULL,
    employment_status_id integer NOT NULL,
    sight_diasability boolean NOT NULL DEFAULT false,
    hearing_disability boolean NOT NULL DEFAULT false,
    speech_disability boolean NOT NULL DEFAULT false,
    physical_disability boolean NOT NULL DEFAULT false,
    intellect_disabiity boolean NOT NULL DEFAULT false,
    emotional_disability boolean NOT NULL DEFAULT false,
    other_disabilities character varying COLLATE pg_catalog."default",
    CONSTRAINT pkey8 PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.household_roster_emigrated
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    fname character varying COLLATE pg_catalog."default" NOT NULL,
    relationship_type integer NOT NULL,
    destination integer NOT NULL,
    sex character varying COLLATE pg_catalog."default" NOT NULL,
    age integer NOT NULL,
    status boolean NOT NULL DEFAULT false,
    year_of_departure integer NOT NULL,
    activity_abroad integer NOT NULL,
    quesstionaire_id integer NOT NULL,
    nationality_id integer NOT NULL,
    dob date NOT NULL,
    ethnicity_id integer NOT NULL,
    birth_place_id integer NOT NULL,
    religion_id integer NOT NULL,
    marital_status_id integer NOT NULL,
    language_literacy_id integer NOT NULL,
    schooling_level_id integer NOT NULL,
    employment_sector_id integer NOT NULL,
    employment_status_id integer NOT NULL,
    sight_diasability boolean NOT NULL DEFAULT false,
    hearing_disability boolean NOT NULL DEFAULT false,
    speech_disability boolean NOT NULL DEFAULT false,
    physical_disability boolean NOT NULL DEFAULT false,
    intellect_disabiity boolean NOT NULL DEFAULT false,
    emotional_disability boolean NOT NULL DEFAULT false,
    other_disabilities character varying COLLATE pg_catalog."default",
    CONSTRAINT pkey10 PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.household_roster_present
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    fname character varying COLLATE pg_catalog."default" NOT NULL,
    relationship_type integer NOT NULL,
    sex character varying COLLATE pg_catalog."default" NOT NULL,
    status boolean NOT NULL DEFAULT false,
    questionnaire_id integer NOT NULL,
    nationality_id integer NOT NULL,
    dob date NOT NULL,
    ethnicity_id integer NOT NULL,
    birth_place_id integer NOT NULL,
    religion_id integer NOT NULL,
    marital_status_id integer NOT NULL,
    language_literacy_id integer NOT NULL,
    schooling_level_id integer NOT NULL,
    employment_sector_id integer NOT NULL,
    employment_status_id integer NOT NULL,
    sight_diasability boolean NOT NULL DEFAULT false,
    hearing_disability boolean NOT NULL DEFAULT false,
    speech_disability boolean NOT NULL DEFAULT false,
    physical_disability boolean NOT NULL DEFAULT false,
    intellect_disabiity boolean NOT NULL DEFAULT false,
    emotional_disability boolean NOT NULL DEFAULT false,
    other_disabilities character varying COLLATE pg_catalog."default",
    CONSTRAINT pkey7 PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.language_literacy
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT ll_pkey PRIMARY KEY (id),
    CONSTRAINT llitukey UNIQUE (code),
    CONSTRAINT llukey UNIQUE (id, description)
);

CREATE TABLE IF NOT EXISTS public.lighting
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lightingpkey PRIMARY KEY (id, description),
    CONSTRAINT light_ukey UNIQUE (id),
    CONSTRAINT lightingukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.liquid_waste_disposal
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT liqwadispkey PRIMARY KEY (id, description),
    CONSTRAINT liquidwadis_ukey UNIQUE (id),
    CONSTRAINT liqwadisukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.livestock_or_fish
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lof_pkey PRIMARY KEY (id, description),
    CONSTRAINT lof_ukey UNIQUE (id),
    CONSTRAINT lofi_ukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.localities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    "subdistrictID" integer NOT NULL,
    name character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pkey4 PRIMARY KEY (id, "subdistrictID"),
    CONSTRAINT ukey4 UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.marital_status
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT marital_status_pkey PRIMARY KEY (id),
    CONSTRAINT mastukey UNIQUE (code),
    CONSTRAINT ms_ukey UNIQUE (id, description)
);

CREATE TABLE IF NOT EXISTS public.mortality
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    sex character varying COLLATE pg_catalog."default" NOT NULL,
    age_at_death integer NOT NULL,
    accident boolean NOT NULL DEFAULT false,
    pregnancy boolean DEFAULT false,
    questionaire_id integer NOT NULL,
    CONSTRAINT mortality_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.nationality
(
    id integer NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT nationality_pkey PRIMARY KEY (id),
    CONSTRAINT nationality_ukey UNIQUE (id)
        INCLUDE(id),
    CONSTRAINT nationality_ukey2 UNIQUE (description),
    CONSTRAINT nationalityukey3 UNIQUE (code)
);

CREATE TABLE IF NOT EXISTS public.outer_wall
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT outwpkey PRIMARY KEY (id, description),
    CONSTRAINT outw_ukey UNIQUE (id),
    CONSTRAINT outwukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.ownership_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT owtpkey PRIMARY KEY (id, description),
    CONSTRAINT ownt_ukey UNIQUE (id),
    CONSTRAINT owntukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.questionnaire
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    code character varying COLLATE pg_catalog."default" NOT NULL,
    region_id integer NOT NULL,
    district_type_id integer NOT NULL,
    district_id integer NOT NULL,
    sub_district_id integer NOT NULL,
    locality_id integer NOT NULL,
    household_members_male integer NOT NULL,
    household_members_female integer NOT NULL,
    enumerator_id integer NOT NULL,
    household_visitors_male integer NOT NULL,
    household_visitors_female integer NOT NULL,
    date_started date NOT NULL,
    husehold_address character varying COLLATE pg_catalog."default" NOT NULL,
    ecg_or_vra_number character varying COLLATE pg_catalog."default" NOT NULL,
    date_completed date NOT NULL,
    household_number character varying COLLATE pg_catalog."default" NOT NULL,
    dwelling_type_id integer NOT NULL,
    roof_type_id integer NOT NULL,
    outer_wall_type_id integer NOT NULL,
    floor_type_id integer NOT NULL,
    tenure_type_id integer NOT NULL,
    ownership_type_id integer NOT NULL,
    household_rooms integer NOT NULL,
    bedrooms integer NOT NULL,
    shared_rooms boolean NOT NULL DEFAULT false,
    lighting_type_id integer NOT NULL,
    drinking_water_id integer NOT NULL,
    domestic_water_id integer NOT NULL,
    cooking_fuel_id integer NOT NULL,
    cooking_space_id integer NOT NULL,
    bathing_facilities_id integer NOT NULL,
    toilet_facilities_id integer NOT NULL,
    toilet_facilities_shared_id integer NOT NULL,
    households_per_toilet_facility integer NOT NULL,
    solid_waste_disposal_id integer NOT NULL,
    liquid_waste_disposal_id integer NOT NULL,
    diceased boolean NOT NULL DEFAULT false,
    fixed_tel_line boolean NOT NULL DEFAULT false,
    desktop_or_laptop boolean NOT NULL DEFAULT true,
    total_visits integer NOT NULL,
    residence_type_id integer NOT NULL,
    crop_farming boolean NOT NULL DEFAULT true,
    tree_growing boolean NOT NULL DEFAULT false,
    livestock_rearing boolean NOT NULL DEFAULT false,
    fish_farming boolean NOT NULL DEFAULT false,
    males_in_agric integer NOT NULL,
    females_in_agric integer NOT NULL,
    crop_type_id integer NOT NULL,
    farm_measurement_unit_id integer,
    livestock_or_fish_id integer,
    CONSTRAINT questionnaire_pkey PRIMARY KEY (id),
    CONSTRAINT questio_ukey UNIQUE (id),
    CONSTRAINT questionnaireukey UNIQUE (id, code, household_number)
);

CREATE TABLE IF NOT EXISTS public.region_and_country_codes
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Regions_pkey" PRIMARY KEY (id, name),
    CONSTRAINT reg_ukey UNIQUE (id),
    CONSTRAINT regcouukey UNIQUE (name, code)
);

CREATE TABLE IF NOT EXISTS public.relationship_codes
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT pkey6 PRIMARY KEY (id, description),
    CONSTRAINT relcukey UNIQUE (code),
    CONSTRAINT ukey6 UNIQUE (description),
    CONSTRAINT ukey7 UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.religion
(
    id integer NOT NULL,
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT religion_pkey PRIMARY KEY (id),
    CONSTRAINT relegionukey3 UNIQUE (code),
    CONSTRAINT religion_ukey UNIQUE (id)
        INCLUDE(id),
    CONSTRAINT religion_ukey2 UNIQUE (description)
);

CREATE TABLE IF NOT EXISTS public.residence_type
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT residencet_pkey PRIMARY KEY (id),
    CONSTRAINT recidencet_ukey UNIQUE (id, description, code),
    CONSTRAINT residence_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.roof
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT roofpkey PRIMARY KEY (id, description),
    CONSTRAINT rooft_ukey UNIQUE (id),
    CONSTRAINT roofukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.schooling_level
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT slpkey PRIMARY KEY (id, description),
    CONSTRAINT schlevukey UNIQUE (id, description, code),
    CONSTRAINT schooling_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.solid_waste_disposal
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT solwadispkey PRIMARY KEY (id, description),
    CONSTRAINT solidwadis_ukey UNIQUE (id),
    CONSTRAINT solwadisukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.subdistricts
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    districtid integer NOT NULL,
    name integer,
    CONSTRAINT pkey1_2 PRIMARY KEY (id, districtid),
    CONSTRAINT ukey3 UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.supervisor
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    name character varying COLLATE pg_catalog."default" NOT NULL,
    phone integer NOT NULL,
    CONSTRAINT superpkey PRIMARY KEY (id),
    CONSTRAINT superukey UNIQUE (id, name, phone)
);

CREATE TABLE IF NOT EXISTS public.tenure
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tenurepkey PRIMARY KEY (id, description),
    CONSTRAINT tenure_ukey UNIQUE (id),
    CONSTRAINT tenureukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.toilet_facilities
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT toifacpkey PRIMARY KEY (id, description),
    CONSTRAINT toifacukey UNIQUE (id, description, code),
    CONSTRAINT toiletfac_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.toilet_facilities_shared
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT toifacshpkey PRIMARY KEY (id, description),
    CONSTRAINT toifacshukey UNIQUE (id, description, code),
    CONSTRAINT toiletfacsha_ukey UNIQUE (id)
);

CREATE TABLE IF NOT EXISTS public.water_supply_domestic
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT watersdopkey PRIMARY KEY (id, description),
    CONSTRAINT domesticwater_ukey UNIQUE (id),
    CONSTRAINT watsupdoukey UNIQUE (id, description, code)
);

CREATE TABLE IF NOT EXISTS public.water_supply_drinking
(
    id integer NOT NULL GENERATED ALWAYS AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 2147483647 CACHE 1 ),
    description character varying COLLATE pg_catalog."default" NOT NULL,
    code character varying COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT waterspkey PRIMARY KEY (id, description),
    CONSTRAINT drinkingwater_ukey UNIQUE (id),
    CONSTRAINT watsupukey UNIQUE (id, description, code)
);

ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissio_permission_id_84c5c92e_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_permission_id_84c5c92e
    ON public.auth_group_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_group_permissions
    ADD CONSTRAINT auth_group_permissions_group_id_b120cbf9_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_group_permissions_group_id_b120cbf9
    ON public.auth_group_permissions(group_id);


ALTER TABLE IF EXISTS public.auth_permission
    ADD CONSTRAINT auth_permission_content_type_id_2f476e4b_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_permission_content_type_id_2f476e4b
    ON public.auth_permission(content_type_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_group_id_97559544_fk_auth_group_id FOREIGN KEY (group_id)
    REFERENCES public.auth_group (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_group_id_97559544
    ON public.auth_user_groups(group_id);


ALTER TABLE IF EXISTS public.auth_user_groups
    ADD CONSTRAINT auth_user_groups_user_id_6a12ed8b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_groups_user_id_6a12ed8b
    ON public.auth_user_groups(user_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permi_permission_id_1fbb5f2c_fk_auth_perm FOREIGN KEY (permission_id)
    REFERENCES public.auth_permission (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_permission_id_1fbb5f2c
    ON public.auth_user_user_permissions(permission_id);


ALTER TABLE IF EXISTS public.auth_user_user_permissions
    ADD CONSTRAINT auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS auth_user_user_permissions_user_id_a95ead1b
    ON public.auth_user_user_permissions(user_id);


ALTER TABLE IF EXISTS public.districts
    ADD CONSTRAINT fkey1 FOREIGN KEY (district_type_id)
    REFERENCES public.district_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_content_type_id_c4bce8eb_fk_django_co FOREIGN KEY (content_type_id)
    REFERENCES public.django_content_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_content_type_id_c4bce8eb
    ON public.django_admin_log(content_type_id);


ALTER TABLE IF EXISTS public.django_admin_log
    ADD CONSTRAINT django_admin_log_user_id_c564eba6_fk_auth_user_id FOREIGN KEY (user_id)
    REFERENCES public.auth_user (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    DEFERRABLE INITIALLY DEFERRED;
CREATE INDEX IF NOT EXISTS django_admin_log_user_id_c564eba6
    ON public.django_admin_log(user_id);


ALTER TABLE IF EXISTS public.enumerator
    ADD CONSTRAINT enum_fkey1 FOREIGN KEY (supervisor_id)
    REFERENCES public.supervisor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT fkey8 FOREIGN KEY (relationship_type)
    REFERENCES public.relationship_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT fkey9 FOREIGN KEY (destination)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey FOREIGN KEY (questionaire_id)
    REFERENCES public.questionnaire (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey2 FOREIGN KEY (nationality_id)
    REFERENCES public.nationality (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey3 FOREIGN KEY (ethnicity_id)
    REFERENCES public.ethnicity (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey4 FOREIGN KEY (birth_place_id)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey5 FOREIGN KEY (religion_id)
    REFERENCES public.religion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey6 FOREIGN KEY (marital_status_id)
    REFERENCES public.marital_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey7 FOREIGN KEY (language_literacy_id)
    REFERENCES public.language_literacy (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey8 FOREIGN KEY (schooling_level_id)
    REFERENCES public.schooling_level (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhabsent_fkey9 FOREIGN KEY (employment_sector_id)
    REFERENCES public.employment_sector (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_absent
    ADD CONSTRAINT hhpresent_fkey10 FOREIGN KEY (employment_status_id)
    REFERENCES public.employment_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT fkey10 FOREIGN KEY (relationship_type)
    REFERENCES public.relationship_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT fkey11 FOREIGN KEY (destination)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT fkey12 FOREIGN KEY (activity_abroad)
    REFERENCES public.activity_abroad_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey10 FOREIGN KEY (employment_status_id)
    REFERENCES public.employment_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey2 FOREIGN KEY (nationality_id)
    REFERENCES public.nationality (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey3 FOREIGN KEY (ethnicity_id)
    REFERENCES public.ethnicity (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey4 FOREIGN KEY (birth_place_id)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey5 FOREIGN KEY (religion_id)
    REFERENCES public.religion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey6 FOREIGN KEY (marital_status_id)
    REFERENCES public.marital_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey7 FOREIGN KEY (language_literacy_id)
    REFERENCES public.language_literacy (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey8 FOREIGN KEY (schooling_level_id)
    REFERENCES public.schooling_level (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhemigrated_fkey9 FOREIGN KEY (employment_sector_id)
    REFERENCES public.employment_sector (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_emigrated
    ADD CONSTRAINT hhmigrated_fkey FOREIGN KEY (quesstionaire_id)
    REFERENCES public.questionnaire (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT fkey6 FOREIGN KEY (relationship_type)
    REFERENCES public.relationship_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey FOREIGN KEY (questionnaire_id)
    REFERENCES public.questionnaire (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey10 FOREIGN KEY (employment_status_id)
    REFERENCES public.employment_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey3 FOREIGN KEY (ethnicity_id)
    REFERENCES public.ethnicity (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey4 FOREIGN KEY (birth_place_id)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey5 FOREIGN KEY (religion_id)
    REFERENCES public.religion (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey6 FOREIGN KEY (marital_status_id)
    REFERENCES public.marital_status (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey7 FOREIGN KEY (language_literacy_id)
    REFERENCES public.language_literacy (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey8 FOREIGN KEY (schooling_level_id)
    REFERENCES public.schooling_level (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresent_fkey9 FOREIGN KEY (employment_sector_id)
    REFERENCES public.employment_sector (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.household_roster_present
    ADD CONSTRAINT hhpresnt_fkey2 FOREIGN KEY (nationality_id)
    REFERENCES public.nationality (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.localities
    ADD CONSTRAINT fkey4 FOREIGN KEY ("subdistrictID")
    REFERENCES public.subdistricts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.mortality
    ADD CONSTRAINT mortality_fkey1 FOREIGN KEY (questionaire_id)
    REFERENCES public.questionnaire (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey1 FOREIGN KEY (region_id)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey10 FOREIGN KEY (outer_wall_type_id)
    REFERENCES public.outer_wall (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey11 FOREIGN KEY (floor_type_id)
    REFERENCES public.floor (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey12 FOREIGN KEY (tenure_type_id)
    REFERENCES public.tenure (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey13 FOREIGN KEY (ownership_type_id)
    REFERENCES public.ownership_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey14 FOREIGN KEY (lighting_type_id)
    REFERENCES public.lighting (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey15 FOREIGN KEY (drinking_water_id)
    REFERENCES public.water_supply_drinking (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey16 FOREIGN KEY (domestic_water_id)
    REFERENCES public.water_supply_domestic (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey17 FOREIGN KEY (cooking_fuel_id)
    REFERENCES public.cooking_fuel (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey18 FOREIGN KEY (cooking_space_id)
    REFERENCES public.cooking_space (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey19 FOREIGN KEY (bathing_facilities_id)
    REFERENCES public.bathing_facilities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey2 FOREIGN KEY (region_id)
    REFERENCES public.region_and_country_codes (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey20 FOREIGN KEY (toilet_facilities_id)
    REFERENCES public.toilet_facilities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey21 FOREIGN KEY (toilet_facilities_shared_id)
    REFERENCES public.toilet_facilities_shared (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey22 FOREIGN KEY (solid_waste_disposal_id)
    REFERENCES public.solid_waste_disposal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey23 FOREIGN KEY (liquid_waste_disposal_id)
    REFERENCES public.liquid_waste_disposal (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey24 FOREIGN KEY (residence_type_id)
    REFERENCES public.residence_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey25 FOREIGN KEY (crop_type_id)
    REFERENCES public.crop_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey26 FOREIGN KEY (farm_measurement_unit_id)
    REFERENCES public.farm_measurement_unit (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey27 FOREIGN KEY (livestock_or_fish_id)
    REFERENCES public.livestock_or_fish (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey3 FOREIGN KEY (district_type_id)
    REFERENCES public.district_types (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey4 FOREIGN KEY (district_id)
    REFERENCES public.districts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey5 FOREIGN KEY (sub_district_id)
    REFERENCES public.subdistricts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey6 FOREIGN KEY (locality_id)
    REFERENCES public.localities (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey7 FOREIGN KEY (enumerator_id)
    REFERENCES public.enumerator (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey8 FOREIGN KEY (dwelling_type_id)
    REFERENCES public.dwelling_type (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.questionnaire
    ADD CONSTRAINT quest_fkey9 FOREIGN KEY (roof_type_id)
    REFERENCES public.roof (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.subdistricts
    ADD CONSTRAINT fkey2 FOREIGN KEY (districtid)
    REFERENCES public.districts (id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;